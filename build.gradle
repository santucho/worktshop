plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
}

group 'santucho'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' } // for SNAPSHOT builds
}

def kotlin_version = '1.3.50'
def arrow_version = '0.10.1-SNAPSHOT'
def jackson_version = '2.9.9'
def junit_jupiter_version = '5.1.1'
def mockito_version = '3.0.0'
def kotest_version = '3.4.2'
dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1")

    implementation("com.fasterxml.jackson.core:jackson-annotations:$jackson_version")
    implementation("com.fasterxml.jackson.core:jackson-core:$jackson_version")
    implementation("com.fasterxml.jackson.core:jackson-databind:$jackson_version")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-smile:$jackson_version")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version")
    implementation("com.fasterxml.jackson.module:jackson-module-afterburner:$jackson_version")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version")

    implementation("com.google.inject:guice:4.2.1")

    implementation("com.sparkjava:spark-core:2.9.1")

    implementation("com.typesafe:config:1.2.1")

    implementation("io.arrow-kt:arrow-fx:$arrow_version")
    implementation("io.arrow-kt:arrow-optics:$arrow_version")
    implementation("io.arrow-kt:arrow-syntax:$arrow_version")
    annotationProcessor("io.arrow-kt:arrow-meta:$arrow_version")

    implementation("org.apache.commons:commons-lang3:3.9")
    implementation("org.apache.commons:commons-collections4:4.0")
    implementation('org.apache.httpcomponents:httpclient:4.5.2') {
        exclude group: 'org.slf4j', module: 'sl4j-api'
    }

    implementation('ch.qos.logback:logback-classic:1.2.3') {
        exclude group: 'org.slf4j', module: 'sl4j-api'
    }

    testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0")
    testImplementation("org.assertj:assertj-core:3.10.0")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version")
    testImplementation("org.mockito:mockito-core:$mockito_version")
    testImplementation("org.mockito:mockito-inline:$mockito_version")
    testImplementation("org.mockito:mockito-junit-jupiter:$mockito_version")
    testImplementation("io.kotlintest:kotlintest-runner-junit5:$kotest_version")
    testImplementation("io.kotlintest:kotlintest-assertions-arrow:$kotest_version")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}